\section{Conceptualisation of the statistical results}\label{sec:conceptualisation}


In the previous section, we have seen how ML4PG can be used to find families of proofs following 
a common proof-pattern. However, the output provided by clustering algorithms is just a family
of similar patches with no hints of why these proof-patches are deemed similar. 
% In addition, the user needs
% to replay the proof to infer the pattern. %Therefore, the conceptualisation of proof-patterns can be
% %a challenge. 
In this section, we present our approach to simplify the conceptualisation of proof-patterns. 


The first challenge that we address is the discovery of the key features that have been taken 
into account during the construction of the clusters. This is a well-known problem in machine-learning 
known as \emph{feature selection}~\cite{GE03}. From a given set of features, feature selection algorithms 
generate different subsets of features and score them; from those scores, a ranking of feature subsets 
is created. ML4PG uses the \emph{correlation-based feature subset selection} algorithm implemented in Weka~\cite{Weka}
-- the machine-learning toolbox employed by ML4PG, see~\cite{KHG13} -- to extract the relevant features taking the 
subset of features with the highest ranking.

\begin{example}\label{ex:correlation-features}
In the case study presented at the end of the previous section, the relevant features that are discovered are:

$-$

$-$

$-$

$-$

$-$
 
 
 
\end{example}

We introduce an automaton-shape representation to help in the visualisation of proof-patches and the features that correlate. 
Automata have been previously used in~\cite{GWR14} to represent models that are inferred from proof traces.  
% This feature selection mechanism helps to explain why the proof-patches are similar since it indicates the 
% features that have been relevant for the construction of the cluster. To show the selected features and their relation with 
% the proof-patches, we introduce an automaton-shape representation. In~\cite{GWR14}, a tool to infer models 
% from proof traces was presented. Those models help to understand the behaviour exhibited by a collection
% of proofs and is represented by automata. 
In our approach, we do not infer models but we just use automata as a visualisation tool.

Given a cluster of proof-patches $C$, we construct an automaton $A$ with $5$ consecutive states. The $i$th state of $A$ is labelled
with the list of the $i$th goal of each proof-patch of $C$. The transitions between the $i$th and $i+1$th states are given by 
the $i$th goal of each proof-patch of $C$. If two or more tactics are the same or belong to the same group (see Figure~\ref{tab:tactics});
they are merged in a unique transition. In addition, each state is annotated with the relevant features for clusters.



% $-$ there are several transitions from the $j$th to the $j+1$th state labelled by the $j$th tactic of each proof-patch of $P$ -- if either the $j$th tactic of two or more
% proof-patches is the same or belong to the same group (see Table~\ref{tab:tactics}), the transitions are merged in a unique transition labelled with the set of those tactics,
% 
% $-$ if a proof ends after the $j$th tactic of a proof-patch, the $j+1$ state is represented as final.

 
\begin{example}
The automaton-shape representation of Example is depicted in Figure~\ref{}.
 
\end{example}


